-- FUNCTION: public.tr_fc_eggsbatchproducts_create_update()

-- DROP FUNCTION public.tr_fc_eggsbatchproducts_create_update();

CREATE FUNCTION public.tr_fc_eggsbatchproducts_create_update()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
	v_unit varchar(50);
	
BEGIN
	IF (NEW."quantity" <1) THEN
		RAISE EXCEPTION 'Quantity cannot be lower than 1';
	END IF;
	
	IF((NEW."quantity"%NEW."divider")<>0) THEN
		RAISE EXCEPTION 'quantity must have 0 remaining from division';
	END IF;
	
	IF(TG_OP = 'INSERT') THEN
		NEW."quantityAvailable" = NEW."quantity";
		
	ELSIF (TG_OP = 'UPDATE') THEN
		IF(OLD."id"<>NEW."id") THEN
			RAISE EXCEPTION 'AnimalProducts.id cannot be changed';
		END IF;
		IF(OLD."createdAt"<>NEW."createdAt") THEN
			RAISE EXCEPTION 'EggsBatchProducts.createdAt cannot be changed';
		END IF;
		IF(OLD."ProductId"<>NEW."ProductId") THEN
			RAISE EXCEPTION 'EggsBatchProducts.ProductId cannot be changed';
		END IF;
		IF(OLD."EggsBatchId"<>NEW."EggsBatchId") THEN
			RAISE EXCEPTION 'EggsBatchProducts.EggsBatchId cannot be changed';
		END IF;
		IF(OLD."divider"<>NEW."divider") THEN
			RAISE EXCEPTION 'EggsBatchProducts.divider cannot be changed';
		END IF;
		IF(OLD."quantity"<>NEW."quantity") THEN
			NEW."quantityAvailable" = OLD."quantityAvailable" + (NEW."quantity" - OLD."quantity");
		END IF;
		

		IF(NEW."quantityAvailable">NEW."quantity") THEN
			RAISE EXCEPTION 'EggsBatchProducts.quantityAvailable cannot be higher than quantity';
		END IF;
	END IF;
	RETURN NEW;

END;
$BODY$;

ALTER FUNCTION public.tr_fc_eggsbatchproducts_create_update()
    OWNER TO postgres;
