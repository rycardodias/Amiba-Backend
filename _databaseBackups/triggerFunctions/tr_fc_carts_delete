-- FUNCTION: public.tr_fc_carts_delete()

-- DROP FUNCTION public.tr_fc_carts_delete();

CREATE OR REPLACE FUNCTION public.tr_fc_carts_delete()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
	v_lastQuantityAvailable integer default 0;
	v_newQuantityAvailable integer default 0;
	v_quantity integer default 0;
BEGIN
	IF(OLD."AnimalProductId" IS NOT NULL) THEN
		SELECT "quantity", "quantityAvailable"
		  INTO v_quantity, v_lastQuantityAvailable
		  FROM public."AnimalProducts"
		 WHERE "id" = OLD."AnimalProductId";
		 v_newQuantityAvailable = (v_lastQuantityAvailable - OLD."quantity");
		
		IF (v_quantity<v_newQuantityAvailable)THEN
			RAISE EXCEPTION 'AnimalProducts.quantity cannot be lower than AnimalProducts.quantityAvailable';
		END IF;

	   UPDATE public."AnimalProducts"
		  SET  "quantityAvailable"= v_newQuantityAvailable
		WHERE "id" = OLD."AnimalProductId";
	ELSE
		SELECT "quantity","quantityAvailable"
		  INTO v_quantity, v_lastQuantityAvailable
	 	 FROM public."EggsBatchProducts"
		 WHERE "id" = OLD."EggsBatchProductId";
	
		v_newQuantityAvailable = (v_lastQuantityAvailable + OLD."quantity");

		IF (v_quantity<v_newQuantityAvailable)THEN
			RAISE EXCEPTION 'EggsBatchProducts.quantity cannot be lower than EggsBatchProducts.quantityAvailable';
		END IF;

	   UPDATE public."EggsBatchProducts"
		  SET  "quantityAvailable"= v_newQuantityAvailable
		WHERE "id" = OLD."EggsBatchProductId";
	END IF;
	
	RETURN OLD;
END;
$BODY$;

ALTER FUNCTION public.tr_fc_carts_delete()
    OWNER TO postgres;
