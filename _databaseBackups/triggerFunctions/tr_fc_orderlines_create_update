-- FUNCTION: public.tr_fc_orderlines_create_update()

-- DROP FUNCTION public.tr_fc_orderlines_create_update();

CREATE OR REPLACE FUNCTION public.tr_fc_orderlines_create_update()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
	v_newQuantityAvailable integer default 0;
	v_quantity integer default 0;
	v_existing_quantity integer default 0;
BEGIN
	IF (NEW."AnimalProductId" IS NOT NULL AND NEW."EggsBatchProductId" IS NOT NULL) THEN
		RAISE EXCEPTION 'Record cannot have AnimalProductId and EggsBatchProductId fields';
	END IF;
	IF (NEW."quantity" <1) THEN
		RAISE EXCEPTION 'Quantity cannot be lower than 1';
	END IF;

	IF(TG_OP = 'INSERT' AND NEW."AnimalProductId" IS NOT NULL) THEN
		SELECT quantity
		  INTO v_existing_quantity
		  FROM public."OrderLines"
		 WHERE "OrderLines"."AnimalProductId" = NEW."AnimalProductId"
		   AND "OrderLines"."OrderId" = NEW."OrderId";
		
		IF(v_existing_quantity IS NOT NULL) THEN
			UPDATE public."OrderLines"
		  	   SET  "quantity"= (v_existing_quantity + NEW."quantity")
			 WHERE "OrderLines"."AnimalProductId" = NEW."AnimalProductId"
		       AND "OrderLines"."OrderId" = NEW."OrderId";

			RETURN OLD;
		END IF;

	ELSIF(TG_OP = 'INSERT' AND NEW."EggsBatchProductId" IS NOT NULL) THEN
		SELECT quantity
		  INTO v_existing_quantity
		  FROM public."OrderLines"
		 WHERE "OrderLines"."EggsBatchProductId" = NEW."EggsBatchProductId"
		   AND "OrderLines"."OrderId" = NEW."OrderId";
		
		IF(v_existing_quantity IS NOT NULL) THEN
			UPDATE public."OrderLines"
		  	   SET  "quantity"= (v_existing_quantity + NEW."quantity")
			 WHERE "OrderLines"."EggsBatchProductId" = NEW."EggsBatchProductId"
		       AND "OrderLines"."OrderId" = NEW."OrderId";
			   
			RETURN OLD;
		END IF;
	
	END IF;

	IF(NEW."AnimalProductId" IS NOT NULL) THEN
		SELECT "quantity"
		  INTO v_quantity
		  FROM public."AnimalProducts"
		 WHERE "id" = NEW."AnimalProductId";
		 
		 v_newQuantityAvailable = (v_quantity - NEW."quantity");

		 IF(v_newQuantityAvailable<0) THEN
			RAISE EXCEPTION 'AnimalProducts.quantityAvailable cannot be lower than 0';
		 END IF;

	   UPDATE public."AnimalProducts"
		  SET  "quantityAvailable"= v_newQuantityAvailable
		WHERE "id" = NEW."AnimalProductId";
		
	ELSE 
		SELECT "quantity"
		  INTO v_quantity
		  FROM public."EggsBatchProducts"
		 WHERE "id" = NEW."EggsBatchProductId";
		 
		 v_newQuantityAvailable = (v_quantity - NEW."quantity");

		 IF(v_newQuantityAvailable<0) THEN
			RAISE EXCEPTION 'EggsBatchProducts.quantityAvailable cannot be lower than 0';
		 END IF;
		
		UPDATE public."EggsBatchProducts"
		SET  "quantityAvailable"= v_newQuantityAvailable
		WHERE "id" = NEW."EggsBatchProductId";
	END IF;
	 
	RETURN NEW;
END;
$BODY$;

ALTER FUNCTION public.tr_fc_orderlines_create_update()
    OWNER TO postgres;
